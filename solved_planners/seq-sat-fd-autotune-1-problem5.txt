INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /home/tiago/.pyenv/versions/3.10.9/bin/python /home/tiago/downloads/fast-downward-23.06/fast-downward-23.06/builds/release/bin/translate/translate.py ../../../workspace/unified-planning/truck/pddl-logistic-trucks/cargo/domain.pddl ../../../workspace/unified-planning/truck/pddl-logistic-trucks/cargo/problem5.pddl --sas-file output.sas
Parsing...
Parsing: [0.020s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.003s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 40 rules.
Computing model... [0.010s CPU, 0.016s wall-clock]
435 relevant atoms
1736 auxiliary atoms
2171 final queue length
2595 total queue pushes
Completing instantiation... [0.010s CPU, 0.011s wall-clock]
Instantiating: [0.030s CPU, 0.032s wall-clock]
Computing fact groups...
Finding invariants...
6 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
0 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.004s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.010s CPU, 0.008s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
14 propositions removed
Detecting unreachable propositions: [0.000s CPU, 0.004s wall-clock]
Reordering and filtering variables...
14 of 14 variables necessary.
0 of 14 mutex groups necessary.
264 of 264 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.001s wall-clock]
Translator variables: 14
Translator derived variables: 0
Translator facts: 70
Translator goal facts: 8
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 264
Translator axioms: 0
Translator task size: 1532
Translator peak memory: 27424 KB
Writing output... [0.010s CPU, 0.002s wall-clock]
Done! [0.070s CPU, 0.055s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/tiago/downloads/fast-downward-23.06/fast-downward-23.06/builds/release/bin/downward --search 'let(hff,ff(transform=adapt_costs(one)),let(hcea,cea(),let(hcg,cg(transform=adapt_costs(plusone)),let(hgc,goalcount(),let(hAdd,add(),iterated([lazy(alt([single(sum([g(),weight(hff,10)])),single(sum([g(),weight(hff,10)]),pref_only=true)],boost=2000),preferred=[hff],reopen_closed=false,cost_type=one),lazy(alt([single(sum([g(),weight(hAdd,7)])),single(sum([g(),weight(hAdd,7)]),pref_only=true),single(sum([g(),weight(hcg,7)])),single(sum([g(),weight(hcg,7)]),pref_only=true),single(sum([g(),weight(hcea,7)])),single(sum([g(),weight(hcea,7)]),pref_only=true),single(sum([g(),weight(hgc,7)])),single(sum([g(),weight(hgc,7)]),pref_only=true)],boost=1000),preferred=[hcea,hgc],reopen_closed=false,cost_type=one),lazy(alt([tiebreaking([sum([g(),weight(hAdd,3)]),hAdd]),tiebreaking([sum([g(),weight(hAdd,3)]),hAdd],pref_only=true),tiebreaking([sum([g(),weight(hcg,3)]),hcg]),tiebreaking([sum([g(),weight(hcg,3)]),hcg],pref_only=true),tiebreaking([sum([g(),weight(hcea,3)]),hcea]),tiebreaking([sum([g(),weight(hcea,3)]),hcea],pref_only=true),tiebreaking([sum([g(),weight(hgc,3)]),hgc]),tiebreaking([sum([g(),weight(hgc,3)]),hgc],pref_only=true)],boost=5000),preferred=[hcea,hgc],reopen_closed=false,cost_type=normal),eager(alt([tiebreaking([sum([g(),weight(hAdd,10)]),hAdd]),tiebreaking([sum([g(),weight(hAdd,10)]),hAdd],pref_only=true),tiebreaking([sum([g(),weight(hcg,10)]),hcg]),tiebreaking([sum([g(),weight(hcg,10)]),hcg],pref_only=true),tiebreaking([sum([g(),weight(hcea,10)]),hcea]),tiebreaking([sum([g(),weight(hcea,10)]),hcea],pref_only=true),tiebreaking([sum([g(),weight(hgc,10)]),hgc]),tiebreaking([sum([g(),weight(hgc,10)]),hgc],pref_only=true)],boost=500),preferred=[hcea,hgc],reopen_closed=true,cost_type=normal)],repeat_last=true,continue_on_fail=true))))))' --internal-plan-file sas_plan < output.sas
[t=0.0011921s, 11024 KB] reading input...
[t=0.0024309s, 11024 KB] done reading input!
[t=0.0701077s, 11548 KB] Simplifying 456 unary operators... done! [456 unary operators]
[t=0.0705287s, 11548 KB] time to simplify: 0.0014222s
[t=0.0706082s, 11548 KB] Initializing additive heuristic...
[t=0.0706311s, 11548 KB] Initializing FF heuristic...
[t=0.071943s, 11548 KB] Initializing context-enhanced additive heuristic...
[t=0.077734s, 11548 KB] Initializing causal graph heuristic...
[t=0.0778653s, 11548 KB] Initializing heuristic cache... building causal graph...done! [t=0.0001567s]
[t=0.085441s, 25624 KB] done!
[t=0.0857776s, 25624 KB] Initializing goal count heuristic...
[t=0.0858953s, 25624 KB] Simplifying 456 unary operators... done! [456 unary operators]
[t=0.0861726s, 25624 KB] time to simplify: 0.0003086s
[t=0.086228s, 25624 KB] Initializing additive heuristic...
[t=0.0869223s, 25888 KB] Building successor generator...done!
[t=0.0871718s, 25888 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0871895s, 25888 KB] time for successor generation creation: 0.0001309s
[t=0.0872237s, 25888 KB] Variables: 14
[t=0.0872472s, 25888 KB] FactPairs: 70
[t=0.0872621s, 25888 KB] Bytes per state: 8
[t=0.0876676s, 25888 KB] Building successor generator...done!
[t=0.0877434s, 25888 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0877584s, 25888 KB] time for successor generation creation: 9e-07s
[t=0.0877749s, 25888 KB] Variables: 14
[t=0.0877893s, 25888 KB] FactPairs: 70
[t=0.0878031s, 25888 KB] Bytes per state: 8
[t=0.0879122s, 25888 KB] Starting search: lazy(alt([single(sum([g(),weight(hff,10)])),single(sum([g(),weight(hff,10)]),pref_only=true)],boost=2000),preferred=[hff],reopen_closed=false,cost_type=one)
[t=0.087957s, 25888 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0887424s, 25888 KB] New best heuristic value for ff(transform=adapt_costs(one)): 24
[t=0.0888057s, 25888 KB] g=0, 1 evaluated, 0 expanded
[t=0.0888581s, 25888 KB] Initial heuristic value for ff(transform=adapt_costs(one)): 24
[t=0.0889074s, 25888 KB] New best heuristic value for ff(transform=adapt_costs(one)): 23
[t=0.088927s, 25888 KB] g=1, 3 evaluated, 2 expanded
[t=0.0891147s, 25888 KB] New best heuristic value for ff(transform=adapt_costs(one)): 22
[t=0.0891657s, 25888 KB] g=3, 16 evaluated, 15 expanded
[t=0.0892851s, 25888 KB] New best heuristic value for ff(transform=adapt_costs(one)): 21
[t=0.0893221s, 25888 KB] g=4, 21 evaluated, 20 expanded
[t=0.0894801s, 25888 KB] New best heuristic value for ff(transform=adapt_costs(one)): 20
[t=0.0895171s, 25888 KB] g=6, 29 evaluated, 28 expanded
[t=0.0897747s, 25888 KB] New best heuristic value for ff(transform=adapt_costs(one)): 19
[t=0.0898098s, 25888 KB] g=8, 45 evaluated, 44 expanded
[t=0.0898897s, 25888 KB] New best heuristic value for ff(transform=adapt_costs(one)): 18
[t=0.0899073s, 25888 KB] g=9, 49 evaluated, 48 expanded
[t=0.0899364s, 25888 KB] New best heuristic value for ff(transform=adapt_costs(one)): 17
[t=0.0899837s, 25888 KB] g=10, 50 evaluated, 49 expanded
[t=0.0900193s, 25888 KB] New best heuristic value for ff(transform=adapt_costs(one)): 16
[t=0.0900367s, 25888 KB] g=11, 51 evaluated, 50 expanded
[t=0.0902211s, 25888 KB] New best heuristic value for ff(transform=adapt_costs(one)): 15
[t=0.0902548s, 25888 KB] g=13, 63 evaluated, 62 expanded
[t=0.0905009s, 25888 KB] New best heuristic value for ff(transform=adapt_costs(one)): 13
[t=0.0905353s, 25888 KB] g=15, 77 evaluated, 76 expanded
[t=0.0906098s, 25888 KB] New best heuristic value for ff(transform=adapt_costs(one)): 12
[t=0.0906274s, 25888 KB] g=16, 81 evaluated, 80 expanded
[t=0.0907212s, 25888 KB] New best heuristic value for ff(transform=adapt_costs(one)): 11
[t=0.0907935s, 25888 KB] g=17, 86 evaluated, 85 expanded
[t=0.0908934s, 25888 KB] New best heuristic value for ff(transform=adapt_costs(one)): 10
[t=0.0909158s, 25888 KB] g=18, 90 evaluated, 89 expanded
[t=0.0909972s, 25888 KB] New best heuristic value for ff(transform=adapt_costs(one)): 9
[t=0.0910147s, 25888 KB] g=19, 94 evaluated, 93 expanded
[t=0.0910852s, 25888 KB] New best heuristic value for ff(transform=adapt_costs(one)): 8
[t=0.0911012s, 25888 KB] g=20, 98 evaluated, 97 expanded
[t=0.0911728s, 25888 KB] New best heuristic value for ff(transform=adapt_costs(one)): 7
[t=0.0912996s, 25888 KB] g=22, 102 evaluated, 101 expanded
[t=0.0913814s, 25888 KB] New best heuristic value for ff(transform=adapt_costs(one)): 5
[t=0.0914064s, 25888 KB] g=24, 105 evaluated, 104 expanded
[t=0.0914349s, 25888 KB] New best heuristic value for ff(transform=adapt_costs(one)): 4
[t=0.0914523s, 25888 KB] g=25, 106 evaluated, 105 expanded
[t=0.0914957s, 25888 KB] New best heuristic value for ff(transform=adapt_costs(one)): 2
[t=0.0915132s, 25888 KB] g=28, 109 evaluated, 108 expanded
[t=0.091537s, 25888 KB] New best heuristic value for ff(transform=adapt_costs(one)): 1
[t=0.0915538s, 25888 KB] g=29, 110 evaluated, 109 expanded
[t=0.0915761s, 25888 KB] Solution found!
[t=0.091594s, 25888 KB] Actual search time: 0.003557s
load-truck crg1 tru1 loc1 drv1 cat1 (0)
drive-truck tru1 loc1 loc3 drv1 (1)
load-truck crg3 tru1 loc3 drv3 cat1 (0)
unload-truck crg1 tru1 loc3 drv1 (0)
load-truck crg2 tru2 loc2 drv2 cat2 (0)
drive-truck tru1 loc3 loc1 drv3 (1)
drive-truck tru2 loc2 loc4 drv2 (1)
load-truck crg4 tru2 loc4 drv4 cat2 (0)
unload-truck crg2 tru2 loc4 drv2 (0)
drive-truck tru2 loc4 loc1 drv4 (1)
drive-truck tru2 loc1 loc2 drv4 (1)
drive-truck tru1 loc1 loc4 drv3 (1)
load-truck crg8 tru1 loc4 drv2 cat1 (0)
drive-truck tru1 loc4 loc1 drv2 (1)
unload-truck crg3 tru1 loc1 drv2 (0)
drive-truck tru1 loc1 loc2 drv3 (1)
unload-truck crg8 tru1 loc2 drv3 (0)
load-truck crg6 tru1 loc2 drv3 cat1 (0)
drive-truck tru1 loc2 loc4 drv3 (1)
unload-truck crg6 tru1 loc4 drv3 (0)
drive-truck tru2 loc2 loc1 drv4 (1)
load-truck crg5 tru2 loc1 drv2 cat2 (0)
drive-truck tru2 loc1 loc2 drv2 (1)
unload-truck crg4 tru2 loc2 drv2 (0)
drive-truck tru2 loc2 loc1 drv4 (1)
drive-truck tru2 loc1 loc3 drv4 (1)
unload-truck crg5 tru2 loc3 drv4 (0)
load-truck crg7 tru2 loc3 drv4 cat2 (0)
drive-truck tru2 loc3 loc1 drv4 (1)
unload-truck crg7 tru2 loc1 drv4 (0)
[t=0.0917703s, 25888 KB] Plan length: 30 step(s).
[t=0.0917886s, 25888 KB] Plan cost: 14
[t=0.0918046s, 25888 KB] Expanded 110 state(s).
[t=0.0918206s, 25888 KB] Reopened 0 state(s).
[t=0.0918355s, 25888 KB] Evaluated 111 state(s).
[t=0.0918503s, 25888 KB] Evaluations: 111
[t=0.0918652s, 25888 KB] Generated 928 state(s).
[t=0.0918801s, 25888 KB] Dead ends: 0 state(s).
[t=0.0918957s, 25888 KB] Number of registered states: 111
[t=0.0919111s, 25888 KB] Int hash set load factor: 111/128 = 0.867188
[t=0.0919278s, 25888 KB] Int hash set resizes: 7
[t=0.0919427s, 25888 KB] Best solution cost so far: 14
[t=0.0919577s, 25888 KB] Solution found - keep searching
[t=0.0921003s, 25888 KB] Building successor generator...done!
[t=0.0922048s, 25888 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0922215s, 25888 KB] time for successor generation creation: 1e-06s
[t=0.0922399s, 25888 KB] Variables: 14
[t=0.0922554s, 25888 KB] FactPairs: 70
[t=0.0922744s, 25888 KB] Bytes per state: 8
[t=0.0923005s, 25888 KB] Starting search: lazy(alt([single(sum([g(),weight(hadd,7)])),single(sum([g(),weight(hadd,7)]),pref_only=true),single(sum([g(),weight(hcg,7)])),single(sum([g(),weight(hcg,7)]),pref_only=true),single(sum([g(),weight(hcea,7)])),single(sum([g(),weight(hcea,7)]),pref_only=true),single(sum([g(),weight(hgc,7)])),single(sum([g(),weight(hgc,7)]),pref_only=true)],boost=1000),preferred=[hcea,hgc],reopen_closed=false,cost_type=one)
[t=0.0923195s, 25888 KB] Conducting lazy best first search, (real) bound = 14
[t=0.0924687s, 25888 KB] New best heuristic value for goalcount(): 8
[t=0.0925814s, 25888 KB] New best heuristic value for cea(): 16
[t=0.0926101s, 25888 KB] New best heuristic value for cg(transform=adapt_costs(plusone)): 64
[t=0.0926289s, 25888 KB] New best heuristic value for add(): 14
[t=0.0926467s, 25888 KB] g=0, 1 evaluated, 0 expanded
[t=0.092675s, 25888 KB] Initial heuristic value for goalcount(): 8
[t=0.0926949s, 25888 KB] Initial heuristic value for cea(): 16
[t=0.0927126s, 25888 KB] Initial heuristic value for cg(transform=adapt_costs(plusone)): 64
[t=0.0927297s, 25888 KB] Initial heuristic value for add(): 14
[t=0.0928156s, 25888 KB] New best heuristic value for cg(transform=adapt_costs(plusone)): 60
[t=0.0928374s, 25888 KB] g=1, 2 evaluated, 1 expanded
[t=0.0929242s, 25888 KB] New best heuristic value for cea(): 15
[t=0.0929463s, 25888 KB] New best heuristic value for cg(transform=adapt_costs(plusone)): 56
[t=0.092964s, 25888 KB] New best heuristic value for add(): 13
[t=0.0929818s, 25888 KB] g=2, 3 evaluated, 2 expanded
[t=0.0931251s, 25888 KB] New best heuristic value for cg(transform=adapt_costs(plusone)): 54
[t=0.0931694s, 25888 KB] g=3, 5 evaluated, 4 expanded
[t=0.0933888s, 25888 KB] New best heuristic value for cg(transform=adapt_costs(plusone)): 52
[t=0.0934345s, 25888 KB] g=4, 8 evaluated, 7 expanded
[t=0.0935997s, 25888 KB] New best heuristic value for cg(transform=adapt_costs(plusone)): 51
[t=0.0936722s, 25888 KB] g=4, 10 evaluated, 9 expanded
[t=0.0938688s, 25888 KB] New best heuristic value for cg(transform=adapt_costs(plusone)): 49
[t=0.0939175s, 25888 KB] g=5, 13 evaluated, 12 expanded
[t=0.0941638s, 25888 KB] New best heuristic value for cea(): 14
[t=0.0942184s, 25888 KB] g=2, 17 evaluated, 16 expanded
[t=0.0943487s, 25888 KB] New best heuristic value for cg(transform=adapt_costs(plusone)): 47
[t=0.0943876s, 25888 KB] g=6, 19 evaluated, 18 expanded
[t=0.0948103s, 25888 KB] New best heuristic value for cea(): 13
[t=0.0948485s, 25888 KB] New best heuristic value for add(): 12
[t=0.0948717s, 25888 KB] g=4, 25 evaluated, 24 expanded
[t=0.0950081s, 25888 KB] New best heuristic value for cg(transform=adapt_costs(plusone)): 45
[t=0.0950577s, 25888 KB] g=5, 27 evaluated, 26 expanded
[t=0.0952012s, 25888 KB] New best heuristic value for cg(transform=adapt_costs(plusone)): 43
[t=0.0952522s, 25888 KB] g=6, 29 evaluated, 28 expanded
[t=0.0956186s, 25888 KB] New best heuristic value for goalcount(): 7
[t=0.095657s, 25888 KB] g=7, 35 evaluated, 34 expanded
[t=0.0957253s, 25888 KB] New best heuristic value for cea(): 11
[t=0.0957442s, 25888 KB] New best heuristic value for cg(transform=adapt_costs(plusone)): 41
[t=0.0957589s, 25888 KB] New best heuristic value for add(): 10
[t=0.095773s, 25888 KB] g=8, 36 evaluated, 35 expanded
[t=0.0959197s, 25888 KB] New best heuristic value for cg(transform=adapt_costs(plusone)): 40
[t=0.0959689s, 25888 KB] g=9, 39 evaluated, 38 expanded
[t=0.0963057s, 25888 KB] New best heuristic value for cea(): 10
[t=0.0963432s, 25888 KB] New best heuristic value for cg(transform=adapt_costs(plusone)): 38
[t=0.0963661s, 25888 KB] New best heuristic value for add(): 8
[t=0.0963813s, 25888 KB] g=10, 45 evaluated, 44 expanded
[t=0.0969439s, 25888 KB] New best heuristic value for goalcount(): 6
[t=0.0969829s, 25888 KB] g=9, 55 evaluated, 54 expanded
[t=0.0973838s, 25888 KB] New best heuristic value for cg(transform=adapt_costs(plusone)): 36
[t=0.0974218s, 25888 KB] g=12, 63 evaluated, 62 expanded
[t=0.097508s, 25888 KB] New best heuristic value for cg(transform=adapt_costs(plusone)): 35
[t=0.0975441s, 25888 KB] g=13, 64 evaluated, 63 expanded
[t=0.0978093s, 25888 KB] New best heuristic value for goalcount(): 5
[t=0.0978513s, 25888 KB] g=12, 67 evaluated, 66 expanded
[t=0.0979212s, 25888 KB] New best heuristic value for cea(): 9
[t=0.0979404s, 25888 KB] New best heuristic value for cg(transform=adapt_costs(plusone)): 31
[t=0.0979556s, 25888 KB] g=14, 68 evaluated, 67 expanded
[t=0.0982865s, 25888 KB] New best heuristic value for cea(): 8
[t=0.0983264s, 25888 KB] New best heuristic value for cg(transform=adapt_costs(plusone)): 30
[t=0.0983497s, 25888 KB] New best heuristic value for add(): 7
[t=0.0983648s, 25888 KB] g=16, 73 evaluated, 72 expanded
[t=0.099418s, 25888 KB] New best heuristic value for cg(transform=adapt_costs(plusone)): 27
[t=0.0994617s, 25888 KB] g=18, 93 evaluated, 92 expanded
[t=0.0996747s, 25888 KB] New best heuristic value for cea(): 6
[t=0.0997133s, 25888 KB] New best heuristic value for cg(transform=adapt_costs(plusone)): 23
[t=0.0997362s, 25888 KB] New best heuristic value for add(): 5
[t=0.0997515s, 25888 KB] g=19, 96 evaluated, 95 expanded
[t=0.100114s, 25888 KB] New best heuristic value for cg(transform=adapt_costs(plusone)): 21
[t=0.100154s, 25888 KB] g=20, 102 evaluated, 101 expanded
[t=0.100359s, 26020 KB] New best heuristic value for cea(): 5
[t=0.100398s, 26020 KB] New best heuristic value for cg(transform=adapt_costs(plusone)): 19
[t=0.100421s, 26020 KB] New best heuristic value for add(): 4
[t=0.100437s, 26020 KB] g=21, 105 evaluated, 104 expanded
[t=0.100781s, 26020 KB] New best heuristic value for goalcount(): 4
[t=0.100821s, 26020 KB] New best heuristic value for cg(transform=adapt_costs(plusone)): 18
[t=0.100844s, 26020 KB] g=22, 112 evaluated, 111 expanded
[t=0.10107s, 26020 KB] New best heuristic value for goalcount(): 3
[t=0.10111s, 26020 KB] g=24, 117 evaluated, 116 expanded
[t=0.101933s, 26020 KB] New best heuristic value for cea(): 4
[t=0.101975s, 26020 KB] New best heuristic value for cg(transform=adapt_costs(plusone)): 15
[t=0.101999s, 26020 KB] g=23, 135 evaluated, 134 expanded
[t=0.102059s, 26020 KB] New best heuristic value for cg(transform=adapt_costs(plusone)): 13
[t=0.102081s, 26020 KB] g=24, 136 evaluated, 135 expanded
[t=0.102146s, 26020 KB] New best heuristic value for cg(transform=adapt_costs(plusone)): 12
[t=0.10218s, 26020 KB] g=25, 137 evaluated, 136 expanded
[t=0.10857s, 26152 KB] New best heuristic value for add(): 3
[t=0.108694s, 26152 KB] g=26, 280 evaluated, 279 expanded
[t=0.108834s, 26152 KB] New best heuristic value for goalcount(): 2
[t=0.108881s, 26152 KB] g=25, 282 evaluated, 281 expanded
[t=0.112837s, 26284 KB] New best heuristic value for cea(): 2
[t=0.112911s, 26284 KB] New best heuristic value for cg(transform=adapt_costs(plusone)): 10
[t=0.112935s, 26284 KB] New best heuristic value for add(): 2
[t=0.112951s, 26284 KB] g=28, 371 evaluated, 370 expanded
[t=0.113068s, 26284 KB] New best heuristic value for cg(transform=adapt_costs(plusone)): 8
[t=0.113089s, 26284 KB] g=29, 372 evaluated, 371 expanded
[t=0.113157s, 26284 KB] New best heuristic value for cg(transform=adapt_costs(plusone)): 6
[t=0.113178s, 26284 KB] g=30, 373 evaluated, 372 expanded
[t=0.113238s, 26284 KB] New best heuristic value for cea(): 1
[t=0.113257s, 26284 KB] New best heuristic value for cg(transform=adapt_costs(plusone)): 4
[t=0.113271s, 26284 KB] New best heuristic value for add(): 1
[t=0.113301s, 26284 KB] g=31, 374 evaluated, 373 expanded
[t=0.113346s, 26284 KB] New best heuristic value for goalcount(): 1
[t=0.113366s, 26284 KB] New best heuristic value for cg(transform=adapt_costs(plusone)): 3
[t=0.113399s, 26284 KB] g=32, 375 evaluated, 374 expanded
[t=0.18495s, 27100 KB] New best heuristic value for cea(): 0
[t=0.185054s, 27100 KB] New best heuristic value for cg(transform=adapt_costs(plusone)): 2
[t=0.18508s, 27100 KB] New best heuristic value for add(): 0
[t=0.185097s, 27100 KB] g=31, 2044 evaluated, 2043 expanded
[t=0.194687s, 27232 KB] New best heuristic value for cg(transform=adapt_costs(plusone)): 1
[t=0.194788s, 27232 KB] g=32, 2253 evaluated, 2252 expanded
[t=1.17279s, 34908 KB] Solution found!
[t=1.17294s, 34908 KB] Actual search time: 1.08063s
load-truck crg2 tru2 loc2 drv2 cat2 (0)
drive-truck tru2 loc2 loc1 drv2 (1)
drive-truck tru2 loc1 loc4 drv2 (1)
load-truck crg4 tru2 loc4 drv4 cat2 (0)
unload-truck crg2 tru2 loc4 drv4 (0)
drive-truck tru2 loc4 loc1 drv2 (1)
unload-truck crg4 tru2 loc1 drv2 (0)
load-truck crg1 tru1 loc1 drv2 cat1 (0)
drive-truck tru1 loc1 loc3 drv2 (1)
unload-truck crg1 tru1 loc3 drv2 (0)
load-truck crg3 tru1 loc3 drv3 cat1 (0)
drive-truck tru1 loc3 loc4 drv3 (1)
load-truck crg8 tru1 loc4 drv4 cat1 (0)
drive-truck tru1 loc4 loc1 drv3 (1)
unload-truck crg3 tru1 loc1 drv4 (0)
drive-truck tru1 loc1 loc2 drv3 (1)
unload-truck crg8 tru1 loc2 drv3 (0)
load-truck crg5 tru2 loc1 drv4 cat2 (0)
load-truck crg6 tru1 loc2 drv3 cat1 (0)
drive-truck tru1 loc2 loc4 drv3 (1)
unload-truck crg6 tru1 loc4 drv3 (0)
drive-truck tru2 loc1 loc3 drv4 (1)
unload-truck crg5 tru2 loc3 drv4 (0)
load-truck crg7 tru2 loc3 drv4 cat2 (0)
drive-truck tru2 loc3 loc1 drv4 (1)
unload-truck crg7 tru2 loc1 drv4 (0)
load-truck crg4 tru2 loc1 drv4 cat2 (0)
drive-truck tru2 loc1 loc2 drv4 (1)
unload-truck crg4 tru2 loc2 drv4 (0)
[t=1.17408s, 34908 KB] Plan length: 29 step(s).
[t=1.17412s, 34908 KB] Plan cost: 11
[t=1.17414s, 34908 KB] Expanded 19649 state(s).
[t=1.17416s, 34908 KB] Reopened 0 state(s).
[t=1.17418s, 34908 KB] Evaluated 19650 state(s).
[t=1.1742s, 34908 KB] Evaluations: 78600
[t=1.17422s, 34908 KB] Generated 236579 state(s).
[t=1.17423s, 34908 KB] Dead ends: 0 state(s).
[t=1.17425s, 34908 KB] Number of registered states: 19650
[t=1.17427s, 34908 KB] Int hash set load factor: 19650/32768 = 0.59967
[t=1.17429s, 34908 KB] Int hash set resizes: 15
[t=1.17431s, 34908 KB] Best solution cost so far: 11
[t=1.17432s, 34908 KB] Solution found - keep searching
[t=1.17633s, 34908 KB] Building successor generator...done!
[t=1.17646s, 34908 KB] peak memory difference for successor generator creation: 0 KB
[t=1.17648s, 34908 KB] time for successor generation creation: 1.6e-06s
[t=1.1765s, 34908 KB] Variables: 14
[t=1.17652s, 34908 KB] FactPairs: 70
[t=1.17654s, 34908 KB] Bytes per state: 8
[t=1.17659s, 34908 KB] Starting search: lazy(alt([tiebreaking([sum([g(),weight(hadd,3)]),hadd]),tiebreaking([sum([g(),weight(hadd,3)]),hadd],pref_only=true),tiebreaking([sum([g(),weight(hcg,3)]),hcg]),tiebreaking([sum([g(),weight(hcg,3)]),hcg],pref_only=true),tiebreaking([sum([g(),weight(hcea,3)]),hcea]),tiebreaking([sum([g(),weight(hcea,3)]),hcea],pref_only=true),tiebreaking([sum([g(),weight(hgc,3)]),hgc]),tiebreaking([sum([g(),weight(hgc,3)]),hgc],pref_only=true)],boost=5000),preferred=[hcea,hgc],reopen_closed=false,cost_type=normal)
[t=1.17662s, 34908 KB] Conducting lazy best first search, (real) bound = 11
[t=1.17672s, 34908 KB] New best heuristic value for goalcount(): 8
[t=1.17674s, 34908 KB] New best heuristic value for add(): 14
[t=1.17676s, 34908 KB] New best heuristic value for cea(): 16
[t=1.17678s, 34908 KB] New best heuristic value for cg(transform=adapt_costs(plusone)): 64
[t=1.17679s, 34908 KB] g=0, 1 evaluated, 0 expanded
[t=1.17683s, 34908 KB] Initial heuristic value for goalcount(): 8
[t=1.17685s, 34908 KB] Initial heuristic value for add(): 14
[t=1.17687s, 34908 KB] Initial heuristic value for cea(): 16
[t=1.17688s, 34908 KB] Initial heuristic value for cg(transform=adapt_costs(plusone)): 64
[t=1.17695s, 34908 KB] New best heuristic value for cg(transform=adapt_costs(plusone)): 60
[t=1.17697s, 34908 KB] g=0, 2 evaluated, 1 expanded
[t=1.17705s, 34908 KB] New best heuristic value for add(): 13
[t=1.17708s, 34908 KB] New best heuristic value for cea(): 15
[t=1.17709s, 34908 KB] New best heuristic value for cg(transform=adapt_costs(plusone)): 56
[t=1.17711s, 34908 KB] g=1, 3 evaluated, 2 expanded
[t=1.17724s, 34908 KB] New best heuristic value for cg(transform=adapt_costs(plusone)): 54
[t=1.17729s, 34908 KB] g=2, 5 evaluated, 4 expanded
[t=1.17748s, 34908 KB] New best heuristic value for cg(transform=adapt_costs(plusone)): 52
[t=1.17754s, 34908 KB] g=2, 8 evaluated, 7 expanded
[t=1.17787s, 34908 KB] New best heuristic value for cea(): 14
[t=1.17791s, 34908 KB] g=2, 13 evaluated, 12 expanded
[t=1.17817s, 34908 KB] New best heuristic value for goalcount(): 7
[t=1.17822s, 34908 KB] g=2, 17 evaluated, 16 expanded
[t=1.17831s, 34908 KB] New best heuristic value for add(): 11
[t=1.17834s, 34908 KB] New best heuristic value for cea(): 13
[t=1.17835s, 34908 KB] New best heuristic value for cg(transform=adapt_costs(plusone)): 50
[t=1.17837s, 34908 KB] g=3, 18 evaluated, 17 expanded
[t=1.17861s, 34908 KB] New best heuristic value for cg(transform=adapt_costs(plusone)): 47
[t=1.17866s, 34908 KB] g=2, 22 evaluated, 21 expanded
[t=1.17881s, 34908 KB] New best heuristic value for cg(transform=adapt_costs(plusone)): 45
[t=1.17886s, 34908 KB] g=3, 24 evaluated, 23 expanded
[t=1.17906s, 34908 KB] New best heuristic value for cea(): 12
[t=1.17911s, 34908 KB] g=4, 27 evaluated, 26 expanded
[t=1.17931s, 34908 KB] New best heuristic value for goalcount(): 6
[t=1.17936s, 34908 KB] g=4, 30 evaluated, 29 expanded
[t=1.17944s, 34908 KB] New best heuristic value for cg(transform=adapt_costs(plusone)): 44
[t=1.17947s, 34908 KB] g=4, 31 evaluated, 30 expanded
[t=1.17954s, 34908 KB] New best heuristic value for add(): 8
[t=1.17956s, 34908 KB] New best heuristic value for cea(): 9
[t=1.17958s, 34908 KB] New best heuristic value for cg(transform=adapt_costs(plusone)): 36
[t=1.1796s, 34908 KB] g=5, 32 evaluated, 31 expanded
[t=1.17968s, 34908 KB] New best heuristic value for goalcount(): 5
[t=1.1797s, 34908 KB] New best heuristic value for cg(transform=adapt_costs(plusone)): 35
[t=1.17972s, 34908 KB] g=5, 33 evaluated, 32 expanded
[t=1.17979s, 34908 KB] New best heuristic value for cg(transform=adapt_costs(plusone)): 32
[t=1.17981s, 34908 KB] g=5, 34 evaluated, 33 expanded
[t=1.17988s, 34908 KB] New best heuristic value for add(): 6
[t=1.1799s, 34908 KB] New best heuristic value for cea(): 7
[t=1.17992s, 34908 KB] New best heuristic value for cg(transform=adapt_costs(plusone)): 28
[t=1.17994s, 34908 KB] g=6, 35 evaluated, 34 expanded
[t=1.18001s, 34908 KB] New best heuristic value for goalcount(): 4
[t=1.18003s, 34908 KB] New best heuristic value for cg(transform=adapt_costs(plusone)): 26
[t=1.18005s, 34908 KB] g=6, 36 evaluated, 35 expanded
[t=1.18011s, 34908 KB] New best heuristic value for cg(transform=adapt_costs(plusone)): 21
[t=1.18014s, 34908 KB] g=6, 37 evaluated, 36 expanded
[t=1.18021s, 34908 KB] New best heuristic value for add(): 5
[t=1.18023s, 34908 KB] New best heuristic value for cea(): 6
[t=1.18025s, 34908 KB] New best heuristic value for cg(transform=adapt_costs(plusone)): 19
[t=1.18027s, 34908 KB] g=7, 38 evaluated, 37 expanded
[t=1.18034s, 34908 KB] New best heuristic value for cg(transform=adapt_costs(plusone)): 18
[t=1.18036s, 34908 KB] g=7, 39 evaluated, 38 expanded
[t=1.18044s, 34908 KB] New best heuristic value for add(): 4
[t=1.18046s, 34908 KB] New best heuristic value for cea(): 4
[t=1.18048s, 34908 KB] New best heuristic value for cg(transform=adapt_costs(plusone)): 14
[t=1.1805s, 34908 KB] g=8, 40 evaluated, 39 expanded
[t=1.18058s, 34908 KB] New best heuristic value for cg(transform=adapt_costs(plusone)): 13
[t=1.1806s, 34908 KB] g=8, 41 evaluated, 40 expanded
[t=1.18087s, 34908 KB] New best heuristic value for add(): 3
[t=1.18092s, 34908 KB] New best heuristic value for cea(): 3
[t=1.18095s, 34908 KB] New best heuristic value for cg(transform=adapt_costs(plusone)): 11
[t=1.18097s, 34908 KB] g=9, 45 evaluated, 44 expanded
[t=1.18107s, 34908 KB] New best heuristic value for goalcount(): 3
[t=1.1811s, 34908 KB] New best heuristic value for cg(transform=adapt_costs(plusone)): 10
[t=1.18112s, 34908 KB] g=9, 46 evaluated, 45 expanded
[t=1.1812s, 34908 KB] New best heuristic value for cg(transform=adapt_costs(plusone)): 9
[t=1.18122s, 34908 KB] g=9, 47 evaluated, 46 expanded
[t=1.18131s, 34908 KB] New best heuristic value for add(): 2
[t=1.18134s, 34908 KB] New best heuristic value for cea(): 2
[t=1.18136s, 34908 KB] New best heuristic value for cg(transform=adapt_costs(plusone)): 7
[t=1.18138s, 34908 KB] g=10, 48 evaluated, 47 expanded
[t=1.18145s, 34908 KB] New best heuristic value for goalcount(): 2
[t=1.18148s, 34908 KB] New best heuristic value for cg(transform=adapt_costs(plusone)): 6
[t=1.1815s, 34908 KB] g=10, 49 evaluated, 48 expanded
[t=1.30468s, 34908 KB] New best heuristic value for add(): 1
[t=1.30483s, 34908 KB] New best heuristic value for cea(): 1
[t=1.30489s, 34908 KB] New best heuristic value for cg(transform=adapt_costs(plusone)): 5
[t=1.30494s, 34908 KB] g=10, 1125 evaluated, 1124 expanded
[t=1.30506s, 34908 KB] New best heuristic value for goalcount(): 1
[t=1.30512s, 34908 KB] g=10, 1126 evaluated, 1125 expanded
[t=1.30525s, 34908 KB] New best heuristic value for cg(transform=adapt_costs(plusone)): 3
[t=1.30529s, 34908 KB] g=10, 1127 evaluated, 1126 expanded
[t=2.62836s, 34908 KB] New best heuristic value for add(): 0
[t=2.62846s, 34908 KB] New best heuristic value for cea(): 0
[t=2.6285s, 34908 KB] New best heuristic value for cg(transform=adapt_costs(plusone)): 1
[t=2.62852s, 34908 KB] g=10, 22150 evaluated, 22149 expanded
[t=5.29451s, 51160 KB] Solution found!
[t=5.29464s, 51160 KB] Actual search time: 4.11802s
load-truck crg2 tru2 loc2 drv2 cat2 (0)
drive-truck tru2 loc2 loc1 drv2 (1)
unload-truck crg2 tru2 loc1 drv2 (0)
load-truck crg1 tru1 loc1 drv2 cat1 (0)
drive-truck tru1 loc1 loc3 drv2 (1)
unload-truck crg1 tru1 loc3 drv2 (0)
load-truck crg3 tru1 loc3 drv3 cat1 (0)
drive-truck tru1 loc3 loc4 drv3 (1)
load-truck crg8 tru1 loc4 drv4 cat1 (0)
drive-truck tru1 loc4 loc1 drv3 (1)
unload-truck crg3 tru1 loc1 drv4 (0)
drive-truck tru1 loc1 loc2 drv3 (1)
unload-truck crg8 tru1 loc2 drv3 (0)
load-truck crg6 tru1 loc2 drv3 cat1 (0)
drive-truck tru1 loc2 loc4 drv3 (1)
unload-truck crg6 tru1 loc4 drv3 (0)
load-truck crg5 tru2 loc1 drv4 cat2 (0)
drive-truck tru2 loc1 loc3 drv4 (1)
unload-truck crg5 tru2 loc3 drv4 (0)
load-truck crg7 tru2 loc3 drv4 cat2 (0)
drive-truck tru2 loc3 loc1 drv4 (1)
unload-truck crg7 tru2 loc1 drv4 (0)
load-truck crg2 tru2 loc1 drv4 cat2 (0)
drive-truck tru2 loc1 loc4 drv4 (1)
unload-truck crg2 tru2 loc4 drv4 (0)
load-truck crg4 tru2 loc4 drv4 cat2 (0)
drive-truck tru2 loc4 loc2 drv4 (1)
unload-truck crg4 tru2 loc2 drv4 (0)
[t=5.29593s, 51160 KB] Plan length: 28 step(s).
[t=5.29598s, 51160 KB] Plan cost: 10
[t=5.296s, 51160 KB] Expanded 67682 state(s).
[t=5.29602s, 51160 KB] Reopened 0 state(s).
[t=5.29604s, 51160 KB] Evaluated 67683 state(s).
[t=5.29605s, 51160 KB] Evaluations: 270732
[t=5.29607s, 51160 KB] Generated 801613 state(s).
[t=5.29609s, 51160 KB] Dead ends: 0 state(s).
[t=5.29611s, 51160 KB] Number of registered states: 67683
[t=5.29612s, 51160 KB] Int hash set load factor: 67683/131072 = 0.51638
[t=5.29614s, 51160 KB] Int hash set resizes: 17
[t=5.29616s, 51160 KB] Best solution cost so far: 10
[t=5.29618s, 51160 KB] Solution found - keep searching
[t=5.3016s, 51160 KB] Building successor generator...done!
[t=5.30175s, 51160 KB] peak memory difference for successor generator creation: 0 KB
[t=5.30177s, 51160 KB] time for successor generation creation: 1.2e-06s
[t=5.30179s, 51160 KB] Variables: 14
[t=5.30181s, 51160 KB] FactPairs: 70
[t=5.30183s, 51160 KB] Bytes per state: 8
[t=5.30186s, 51160 KB] Starting search: eager(alt([tiebreaking([sum([g(),weight(hadd,10)]),hadd]),tiebreaking([sum([g(),weight(hadd,10)]),hadd],pref_only=true),tiebreaking([sum([g(),weight(hcg,10)]),hcg]),tiebreaking([sum([g(),weight(hcg,10)]),hcg],pref_only=true),tiebreaking([sum([g(),weight(hcea,10)]),hcea]),tiebreaking([sum([g(),weight(hcea,10)]),hcea],pref_only=true),tiebreaking([sum([g(),weight(hgc,10)]),hgc]),tiebreaking([sum([g(),weight(hgc,10)]),hgc],pref_only=true)],boost=500),preferred=[hcea,hgc],reopen_closed=true,cost_type=normal)
[t=5.30188s, 51160 KB] Conducting best first search with reopening closed nodes, (real) bound = 10
[t=5.30197s, 51160 KB] New best heuristic value for add(): 14
[t=5.302s, 51160 KB] New best heuristic value for cg(transform=adapt_costs(plusone)): 64
[t=5.30201s, 51160 KB] New best heuristic value for goalcount(): 8
[t=5.30204s, 51160 KB] New best heuristic value for cea(): 16
[t=5.30206s, 51160 KB] g=0, 1 evaluated, 0 expanded
[t=5.30208s, 51160 KB] Initial heuristic value for add(): 14
[t=5.3021s, 51160 KB] Initial heuristic value for cg(transform=adapt_costs(plusone)): 64
[t=5.30212s, 51160 KB] Initial heuristic value for goalcount(): 8
[t=5.30214s, 51160 KB] Initial heuristic value for cea(): 16
[t=5.30215s, 51160 KB] pruning method: none
[t=5.30224s, 51160 KB] New best heuristic value for cg(transform=adapt_costs(plusone)): 60
[t=5.30227s, 51160 KB] g=0, 2 evaluated, 1 expanded
[t=5.30232s, 51160 KB] New best heuristic value for cg(transform=adapt_costs(plusone)): 59
[t=5.30234s, 51160 KB] g=0, 3 evaluated, 1 expanded
[t=5.30246s, 51160 KB] New best heuristic value for cg(transform=adapt_costs(plusone)): 55
[t=5.30249s, 51160 KB] g=0, 4 evaluated, 2 expanded
[t=5.30255s, 51160 KB] New best heuristic value for add(): 13
[t=5.30257s, 51160 KB] New best heuristic value for cea(): 15
[t=5.30259s, 51160 KB] g=1, 5 evaluated, 2 expanded
[t=5.30265s, 51160 KB] New best heuristic value for cea(): 14
[t=5.30267s, 51160 KB] g=1, 6 evaluated, 2 expanded
[t=5.30272s, 51160 KB] New best heuristic value for cg(transform=adapt_costs(plusone)): 53
[t=5.30274s, 51160 KB] g=1, 7 evaluated, 2 expanded
[t=5.30281s, 51160 KB] New best heuristic value for cg(transform=adapt_costs(plusone)): 51
[t=5.30284s, 51160 KB] g=1, 8 evaluated, 3 expanded
[t=5.3029s, 51160 KB] New best heuristic value for goalcount(): 7
[t=5.30292s, 51160 KB] g=1, 9 evaluated, 3 expanded
[t=5.30315s, 51160 KB] New best heuristic value for add(): 12
[t=5.3032s, 51160 KB] New best heuristic value for cg(transform=adapt_costs(plusone)): 47
[t=5.30323s, 51160 KB] New best heuristic value for cea(): 13
[t=5.30325s, 51160 KB] g=2, 14 evaluated, 5 expanded
[t=5.30334s, 51160 KB] New best heuristic value for cg(transform=adapt_costs(plusone)): 45
[t=5.30336s, 51160 KB] g=2, 16 evaluated, 5 expanded
[t=5.30361s, 51160 KB] New best heuristic value for add(): 11
[t=5.30365s, 51160 KB] g=3, 22 evaluated, 6 expanded
[t=5.30399s, 51160 KB] New best heuristic value for cg(transform=adapt_costs(plusone)): 43
[t=5.30404s, 51160 KB] g=2, 30 evaluated, 8 expanded
[t=5.30479s, 51160 KB] New best heuristic value for cg(transform=adapt_costs(plusone)): 42
[t=5.30486s, 51160 KB] g=2, 52 evaluated, 10 expanded
[t=5.30495s, 51160 KB] New best heuristic value for add(): 10
[t=5.30497s, 51160 KB] New best heuristic value for cg(transform=adapt_costs(plusone)): 41
[t=5.30499s, 51160 KB] New best heuristic value for cea(): 11
[t=5.30501s, 51160 KB] g=3, 53 evaluated, 11 expanded
[t=5.30529s, 51160 KB] New best heuristic value for goalcount(): 6
[t=5.30534s, 51160 KB] g=2, 59 evaluated, 11 expanded
[t=5.30553s, 51160 KB] New best heuristic value for add(): 9
[t=5.30557s, 51160 KB] g=4, 63 evaluated, 12 expanded
[t=5.30571s, 51160 KB] New best heuristic value for cg(transform=adapt_costs(plusone)): 40
[t=5.30575s, 51160 KB] g=3, 66 evaluated, 12 expanded
[t=5.30596s, 51160 KB] New best heuristic value for add(): 8
[t=5.30615s, 51160 KB] New best heuristic value for cg(transform=adapt_costs(plusone)): 38
[t=5.30627s, 51160 KB] New best heuristic value for cea(): 10
[t=5.30633s, 51160 KB] g=4, 71 evaluated, 13 expanded
[t=5.30705s, 51160 KB] New best heuristic value for cg(transform=adapt_costs(plusone)): 37
[t=5.30714s, 51160 KB] g=4, 80 evaluated, 14 expanded
[t=5.30721s, 51160 KB] New best heuristic value for add(): 7
[t=5.30724s, 51160 KB] New best heuristic value for cg(transform=adapt_costs(plusone)): 36
[t=5.30725s, 51160 KB] New best heuristic value for cea(): 9
[t=5.30727s, 51160 KB] g=4, 81 evaluated, 14 expanded
[t=5.30783s, 51160 KB] New best heuristic value for goalcount(): 5
[t=5.30788s, 51160 KB] g=3, 96 evaluated, 17 expanded
[t=5.30862s, 51160 KB] New best heuristic value for cg(transform=adapt_costs(plusone)): 35
[t=5.30867s, 51160 KB] g=4, 116 evaluated, 21 expanded, 1 reopened
[t=5.30996s, 51160 KB] New best heuristic value for cg(transform=adapt_costs(plusone)): 34
[t=5.31002s, 51160 KB] g=4, 152 evaluated, 29 expanded, 1 reopened
[t=5.31031s, 51160 KB] New best heuristic value for cg(transform=adapt_costs(plusone)): 33
[t=5.31036s, 51160 KB] g=4, 160 evaluated, 30 expanded, 1 reopened
[t=5.31046s, 51160 KB] New best heuristic value for cea(): 8
[t=5.31048s, 51160 KB] g=5, 162 evaluated, 30 expanded, 1 reopened
[t=5.31082s, 51160 KB] New best heuristic value for cg(transform=adapt_costs(plusone)): 31
[t=5.31087s, 51160 KB] g=5, 171 evaluated, 32 expanded, 1 reopened
[t=5.31094s, 51160 KB] New best heuristic value for cg(transform=adapt_costs(plusone)): 25
[t=5.31096s, 51160 KB] New best heuristic value for cea(): 7
[t=5.31098s, 51160 KB] g=5, 172 evaluated, 32 expanded, 1 reopened
[t=5.3112s, 51160 KB] New best heuristic value for cg(transform=adapt_costs(plusone)): 24
[t=5.31124s, 51160 KB] New best heuristic value for goalcount(): 4
[t=5.31127s, 51160 KB] g=5, 178 evaluated, 33 expanded, 1 reopened
[t=5.31133s, 51160 KB] New best heuristic value for add(): 6
[t=5.31135s, 51160 KB] New best heuristic value for cg(transform=adapt_costs(plusone)): 23
[t=5.31137s, 51160 KB] New best heuristic value for cea(): 6
[t=5.31139s, 51160 KB] g=6, 179 evaluated, 33 expanded, 1 reopened
[t=5.31144s, 51160 KB] New best heuristic value for add(): 4
[t=5.31146s, 51160 KB] New best heuristic value for cg(transform=adapt_costs(plusone)): 22
[t=5.31148s, 51160 KB] New best heuristic value for cea(): 5
[t=5.3115s, 51160 KB] g=6, 180 evaluated, 33 expanded, 1 reopened
[t=5.31165s, 51160 KB] New best heuristic value for cg(transform=adapt_costs(plusone)): 21
[t=5.3117s, 51160 KB] g=5, 184 evaluated, 34 expanded, 1 reopened
[t=5.3118s, 51160 KB] New best heuristic value for cg(transform=adapt_costs(plusone)): 20
[t=5.31182s, 51160 KB] g=6, 186 evaluated, 34 expanded, 1 reopened
[t=5.31204s, 51160 KB] New best heuristic value for cg(transform=adapt_costs(plusone)): 17
[t=5.31208s, 51160 KB] g=6, 192 evaluated, 35 expanded, 1 reopened
[t=5.31234s, 51160 KB] New best heuristic value for cg(transform=adapt_costs(plusone)): 15
[t=5.3124s, 51160 KB] New best heuristic value for goalcount(): 3
[t=5.31243s, 51160 KB] g=6, 199 evaluated, 36 expanded, 1 reopened
[t=5.31249s, 51160 KB] New best heuristic value for cea(): 4
[t=5.31251s, 51160 KB] g=7, 200 evaluated, 36 expanded, 1 reopened
[t=5.31258s, 51160 KB] New best heuristic value for add(): 3
[t=5.31261s, 51160 KB] g=7, 201 evaluated, 36 expanded, 1 reopened
[t=5.31277s, 51160 KB] New best heuristic value for cg(transform=adapt_costs(plusone)): 13
[t=5.31281s, 51160 KB] g=7, 205 evaluated, 37 expanded, 1 reopened
[t=5.37836s, 51160 KB] New best heuristic value for add(): 2
[t=5.37846s, 51160 KB] New best heuristic value for cg(transform=adapt_costs(plusone)): 10
[t=5.3785s, 51160 KB] New best heuristic value for cea(): 2
[t=5.37852s, 51160 KB] g=9, 2039 evaluated, 457 expanded, 67 reopened
[t=5.37871s, 51160 KB] New best heuristic value for cg(transform=adapt_costs(plusone)): 8
[t=5.37876s, 51160 KB] New best heuristic value for goalcount(): 2
[t=5.37878s, 51160 KB] g=9, 2044 evaluated, 458 expanded, 67 reopened
[t=5.3789s, 51160 KB] New best heuristic value for cg(transform=adapt_costs(plusone)): 6
[t=5.37894s, 51160 KB] g=9, 2047 evaluated, 459 expanded, 67 reopened
[t=5.48179s, 51160 KB] New best heuristic value for add(): 1
[t=5.48191s, 51160 KB] New best heuristic value for cea(): 1
[t=5.48194s, 51160 KB] g=9, 4959 evaluated, 1316 expanded, 198 reopened
[t=5.48203s, 51160 KB] New best heuristic value for cg(transform=adapt_costs(plusone)): 5
[t=5.48205s, 51160 KB] New best heuristic value for goalcount(): 1
[t=5.48207s, 51160 KB] g=9, 4961 evaluated, 1317 expanded, 198 reopened
[t=5.48214s, 51160 KB] New best heuristic value for cg(transform=adapt_costs(plusone)): 3
[t=5.48216s, 51160 KB] g=9, 4963 evaluated, 1318 expanded, 198 reopened
[t=987.059s, 690380 KB] Completely explored state space -- no solution!
[t=987.059s, 690380 KB] Actual search time: 981.757s
[t=987.059s, 690380 KB] Expanded 16759683 state(s).
[t=987.059s, 690380 KB] Reopened 5386749 state(s).
[t=987.059s, 690380 KB] Evaluated 11372934 state(s).
[t=987.059s, 690380 KB] Evaluations: 79011102
[t=987.059s, 690380 KB] Generated 92397717 state(s).
[t=987.059s, 690380 KB] Dead ends: 0 state(s).
[t=987.059s, 690380 KB] Number of registered states: 11372934
[t=987.059s, 690380 KB] Int hash set load factor: 11372934/16777216 = 0.67788
[t=987.059s, 690380 KB] Int hash set resizes: 24
[t=987.06s, 690380 KB] Best solution cost so far: 10
[t=987.06s, 690380 KB] No solution found - keep searching
[t=987.086s, 690380 KB] Actual search time: 986.998s
[t=987.086s, 690380 KB] Cumulative statistics:
[t=987.086s, 690380 KB] Expanded 16847124 state(s).
[t=987.086s, 690380 KB] Reopened 5386749 state(s).
[t=987.086s, 690380 KB] Evaluated 11460378 state(s).
[t=987.086s, 690380 KB] Evaluations: 79360545
[t=987.086s, 690380 KB] Generated 93436837 state(s).
[t=987.086s, 690380 KB] Dead ends: 0 state(s).
[t=987.086s, 690380 KB] Search time: 986.999s
[t=987.086s, 690380 KB] Total time: 987.086s
Solution found.
Peak memory: 690380 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 987.34s
